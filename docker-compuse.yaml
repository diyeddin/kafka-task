services:
  zoo:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo
    container_name: zoo
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TOPIC_AUTO_CREATE: "true"
    depends_on:
      - zoo
    
  init-kafka:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server localhost:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --create --topic my-topic --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server localhost:9092 --list
      "

  producer:
    hostname: producer
    container_name: producer
    build:
      context: ./producer
    depends_on:
      - kafka
      - init-kafka
      - consumer

  consumer:
    hostname: consumer
    container_name: consumer
    build:
      context: ./consumer
    depends_on:
      - kafka
    volumes:
      - data_volume:/data

  api:
    hostname: api
    container_name: api
    build:
      context: ./api
    depends_on:
      - consumer
    ports:
      - "8501:8501"
    volumes:
      - data_volume:/data

volumes:
  data_volume:
